name: release

on:
  push:
    branches:
      - main
      - master
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  build-linux:
    runs-on: ubuntu-22.04

    steps:
    # - name: Dependecies
    #   run : sudo apt update && sudo apt install -y libgl1 ffmpeg libsm6 libxext6 libegl1 '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxrender-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: '^1.18.1' # The Go version to download (if necessary) and use.
    - run: go version
    - name: Prepare
      run: ./scripts/linux.sh setup
    - name: Build
      run: ./scripts/linux.sh build
    - uses: actions/upload-artifact@v3
      with:
        name: ryuu_linux
        path: ./ryuu
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
        retention-days: 1

    # - name: Release
    #   uses: docker://antonyurchenko/git-release:v5
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     args: |
    #         build_linux/*.deb
    #
    #

  publish:
    needs: [build-linux]
    runs-on: ubuntu-latest
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      # Must perform checkout first, since it deletes the target directory
      # before running, and would therefore delete the downloaded artifacts
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gettext-base
      - name: Public release
        run: |
          echo "Publishing to github release"
          gh auth status
        

